Ext.data.JsonP.Kevlar_Attribute({"singleton":false,"statics":{"cfg":[],"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[]},"files":[{"filename":"Attribute.js","href":"Attribute.html#Kevlar-Attribute"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Attribute.html#Kevlar-Attribute' target='_blank'>Attribute.js</a></div></pre><div class='doc-contents'><p>Attribute definition object for a <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>. The Attribute itself does not store data, but instead simply\ndefines the behaviors of a <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model's</a> attributes. A <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a> is made up of Attributes.</p>\n\n<p>Note: You will most likely not instantiate Attribute objects directly. This is used by <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a> with its\n<a href=\"#!/api/Kevlar.Model-cfg-attributes\" rel=\"Kevlar.Model-cfg-attributes\" class=\"docClass\">attributes</a> prototype config. Anonymous config objects provided to <a href=\"#!/api/Kevlar.Model-cfg-attributes\" rel=\"Kevlar.Model-cfg-attributes\" class=\"docClass\">attributes</a>\nwill be passed to the Attribute constructor.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-defaultValue' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-defaultValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-defaultValue' class='name expandable'>defaultValue</a><span> : Mixed/Function</span></div><div class='description'><div class='short'>The default value for the Attribute, if it has no value of its own. ...</div><div class='long'><p>The default value for the Attribute, if it has no value of its own. This can also be specified as the config 'default',\nbut must be wrapped in quotes as <code>default</code> is a reserved word in JavaScript.</p>\n\n<p>If the defaultValue is a function, the function will be executed, and its return value used as the defaultValue.</p>\n</div></div></div><div id='cfg-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-get' class='name expandable'>get</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to change the value that is returned when the Model's get method is called\non the Attribute. ...</div><div class='long'><p>A function that can be used to change the value that is returned when the Model's <a href=\"#!/api/Kevlar.Model-method-get\" rel=\"Kevlar.Model-method-get\" class=\"docClass\">get</a> method is called\non the Attribute. This is useful to create \"computed\" attributes, which may be created based on other Attributes' values.  The function is\npassed two arguments, and should return the computed value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value that the Attribute currently has stored in the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>.</p>\n</div></li><li><span class='pre'>model</span> : <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a><div class='sub-desc'><p>The Model instance that this Attribute belongs to.</p>\n\n<p>For example, if we had a <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a> with <code>firstName</code> and <code>lastName</code> Attributes, and we wanted to create a <code>fullName</code>\nAttribute, this could be done as such:</p>\n\n<pre><code>{\n    name : 'fullName',\n    get : function( value, model ) {  // in this example, the Attribute has no value of its own, so we ignore the first arg\n        return model.get( 'firstName' ) + \" \" + model.get( 'lastName' );\n    }\n}\n</code></pre>\n\n<p>Note: if the intention is to convert a provided value which needs to be stored on the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a> in a different way,\nuse a <a href=\"#!/api/Kevlar.Attribute-cfg-set\" rel=\"Kevlar.Attribute-cfg-set\" class=\"docClass\">set</a> function instead.</p>\n\n<p>However, also note that both a <a href=\"#!/api/Kevlar.Attribute-cfg-set\" rel=\"Kevlar.Attribute-cfg-set\" class=\"docClass\">set</a> and a <code>get</code> function can be used in conjunction.</p>\n</div></li></ul></div></div></div><div id='cfg-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-name' class='name expandable'>name</a><span> : String</span><strong class='required signature'>required</strong></div><div class='description'><div class='short'>The name for the attribute, which is used by the owner Model to reference it. ...</div><div class='long'><p>The name for the attribute, which is used by the owner Model to reference it.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-persist' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-persist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-persist' class='name expandable'>persist</a><span> : Boolean</span></div><div class='description'><div class='short'>True if the attribute should be persisted by its Model using the Model's proxy. ...</div><div class='long'><p>True if the attribute should be persisted by its <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a> using the Model's <a href=\"#!/api/Kevlar.Model-cfg-proxy\" rel=\"Kevlar.Model-cfg-proxy\" class=\"docClass\">proxy</a>.\nSet to false to prevent the attribute from being persisted.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-raw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-raw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-raw' class='name expandable'>raw</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a...</div><div class='long'><p>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a server.\nThis function is automatically called (if it exists) when a persistence <a href=\"#!/api/Kevlar.persistence.Proxy\" rel=\"Kevlar.persistence.Proxy\" class=\"docClass\">proxy</a> is collecting\nthe data to send to the server. The function is passed two arguments, and should return the raw value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The underlying value that the Attribute currently has stored in the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>.</p>\n</div></li><li><span class='pre'>model</span> : <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a><div class='sub-desc'><p>The Model instance that this Attribute belongs to.</p>\n\n<p>For example, a Date object is normally converted to JSON with both its date and time components in a serialized string (such\nas \"2012-01-26T01:20:54.619Z\"). To instead persist the Date in m/d/yyyy format, one could create an Attribute such as this:</p>\n\n<pre><code>{\n    name : 'eventDate',\n    set : function( value, model ) { return new Date( value ); },  // so the value is stored as a Date object when used client-side\n    raw : function( value, model ) {\n        return (value.getMonth()+1) + '/' + value.getDate() + '/' + value.getFullYear();  // m/d/yyyy format \n    }\n}\n</code></pre>\n\n<p>The value that this function returns is the value that is used when the Model's <a href=\"#!/api/Kevlar.Model-method-raw\" rel=\"Kevlar.Model-method-raw\" class=\"docClass\">raw</a> method is called\non the Attribute.</p>\n</div></li></ul></div></div></div><div id='cfg-scope' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-scope' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-scope' class='name expandable'>scope</a><span> : Object</span></div><div class='description'><div class='short'>The scope to call the set, get, and raw functions in. ...</div><div class='long'><p>The scope to call the <a href=\"#!/api/Kevlar.Attribute-cfg-set\" rel=\"Kevlar.Attribute-cfg-set\" class=\"docClass\">set</a>, <a href=\"#!/api/Kevlar.Attribute-cfg-get\" rel=\"Kevlar.Attribute-cfg-get\" class=\"docClass\">get</a>, and <a href=\"#!/api/Kevlar.Attribute-cfg-raw\" rel=\"Kevlar.Attribute-cfg-raw\" class=\"docClass\">raw</a> functions in. Defaults to the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>\ninstance.</p>\n</div></div></div><div id='cfg-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-set' class='name expandable'>set</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert the value provided to the attribute, to a new value which will be stored\non th...</div><div class='long'><p>A function that can be used to convert the value provided to the attribute, to a new value which will be stored\non the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>. This function is passed the following arguments:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The provided data value to the attribute. If the attribute has no initial data value, its <a href=\"#!/api/Kevlar.Attribute-cfg-defaultValue\" rel=\"Kevlar.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>\n  will be provided to this argument upon instantiation of the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>.</p>\n</div></li><li><span class='pre'>model</span> : <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a><div class='sub-desc'><p>The Model instance that this Attribute belongs to.</p>\n\n<p>The function should then do any processing that is necessary, and return the value that the Attribute should hold. For example,\nthis <code>set</code> function will convert a string value to a\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\">Date</a>\nobject. Otherwise, it will return the value unchanged:</p>\n\n<pre><code>set : function( value, model ) {\n    if( typeof value === 'string' ) {\n        value = new Date( value );\n    }\n    return value;\n}\n</code></pre>\n\n<p>The <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a> instance is passed to this function as well, in case other Attributes need to be queried, or need\nto be <a href=\"#!/api/Kevlar.Model-method-set\" rel=\"Kevlar.Model-method-set\" class=\"docClass\">set</a> by the <code>set</code> function. However, in the case of querying other Attributes for their value, be\ncareful in that they may not be set to the expected value when the <code>set</code> function executes. For creating computed Attributes that\nrely on other Attributes' values, use a <a href=\"#!/api/Kevlar.Attribute-cfg-get\" rel=\"Kevlar.Attribute-cfg-get\" class=\"docClass\">get</a> function instead.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>Both a <code>set</code> and a <a href=\"#!/api/Kevlar.Attribute-cfg-get\" rel=\"Kevlar.Attribute-cfg-get\" class=\"docClass\">get</a> function can be used in conjunction.</li>\n<li>The <code>set</code> function is called upon instantiation of the <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Model</a>, if the Model is passed an initial value\nfor the Attribute, or if the Attribute has a <a href=\"#!/api/Kevlar.Attribute-cfg-defaultValue\" rel=\"Kevlar.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>.</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='cfg-type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-cfg-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-cfg-type' class='name expandable'>type</a><span> : Function</span></div><div class='description'><div class='short'>Specifies the type of the Attribute, in which a conversion of the raw data will be performed. ...</div><div class='long'><p>Specifies the type of the Attribute, in which a conversion of the raw data will be performed.\nCurrently, this config accepts a constructor function for the type. If a <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a>\nsubclass is provided, any raw data object will be fed to the constructor function.</p>\n\n<p>In the future, this may be implemented for other custom types.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Kevlar.Attribute-method-constructor' class='name expandable'>Kevlar.Attribute</a>( <span class='pre'>Object/String config</span> ) : Object</div><div class='description'><div class='short'>Creates a new Attribute instance. ...</div><div class='long'><p>Creates a new Attribute instance. Note: You will normally not be using this constructor function, as this class\nis only used internally by <a href=\"#!/api/Kevlar.Model\" rel=\"Kevlar.Model\" class=\"docClass\">Kevlar.Model</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object/String<div class='sub-desc'><p>An object (hashmap) of the Attribute object's configuration options, which is its definition.\n  Can also be its Attribute <a href=\"#!/api/Kevlar.Attribute-cfg-name\" rel=\"Kevlar.Attribute-cfg-name\" class=\"docClass\">name</a> provided directly as a string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Retrieves the name for the Attribute. ...</div><div class='long'><p>Retrieves the name for the Attribute. ()</p>\n</div></div></div><div id='method-isPersisted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar.Attribute'>Kevlar.Attribute</span><br/><a href='source/Attribute.html#Kevlar-Attribute-method-isPersisted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar.Attribute-method-isPersisted' class='name expandable'>isPersisted</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute should be persisted. ...</div><div class='long'><p>Determines if the Attribute should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","uses":[],"code_type":"assignment","inheritdoc":null,"superclasses":[],"mixins":[],"members":{"property":[],"cfg":[{"owner":"Kevlar.Attribute","meta":{},"name":"defaultValue","id":"cfg-defaultValue","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"get","id":"cfg-get","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{"required":true},"name":"name","id":"cfg-name","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"persist","id":"cfg-persist","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"raw","id":"cfg-raw","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"scope","id":"cfg-scope","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"set","id":"cfg-set","tagname":"cfg"},{"owner":"Kevlar.Attribute","meta":{},"name":"type","id":"cfg-type","tagname":"cfg"}],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"Kevlar.Attribute","meta":{},"name":"constructor","id":"method-constructor","tagname":"method"},{"owner":"Kevlar.Attribute","meta":{},"name":"getName","id":"method-getName","tagname":"method"},{"owner":"Kevlar.Attribute","meta":{},"name":"isPersisted","id":"method-isPersisted","tagname":"method"}]},"component":false,"meta":{},"private":false,"mixedInto":[],"name":"Kevlar.Attribute","alternateClassNames":[],"aliases":{},"html_meta":{},"tagname":"class","extends":null,"requires":[],"id":"class-Kevlar.Attribute","allMixins":[],"subclasses":[],"inheritable":false});