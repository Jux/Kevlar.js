Ext.data.JsonP.Kevlar({"singleton":true,"statics":{"cfg":[],"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[]},"files":[{"filename":"Kevlar.js","href":"Kevlar.html#Kevlar"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Kevlar.html#Kevlar' target='_blank'>Kevlar.js</a></div></pre><div class='doc-contents'><p>Main singleton class and utility functions for the Kevlar library.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-apply' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-property-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-property-apply' class='name not-expandable'>apply</a><span> : Object</span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-applyIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-property-applyIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-property-applyIf' class='name not-expandable'>applyIf</a><span> : Object</span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-property-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-property-extend' class='name not-expandable'>extend</a><span> : Object</span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abstractFn' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-abstractFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-abstractFn' class='name expandable'>abstractFn</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>An abstract function (method). ...</div><div class='long'><p>An abstract function (method). This can be referred to in cases where you want a function\nthat is abstract, but do not want to create a new function object with a new thrown\nerror string (which can bloat the code when repeated over many abstract classes/functions).\nOne should check the call stack when this error is thrown to determine which abstract\nmethod they forgot to implement.</p>\n\n<p>Ex in a class's prototype object literal definition:</p>\n\n<pre><code>someMethod: <a href=\"#!/api/Kevlar-method-abstractFn\" rel=\"Kevlar-method-abstractFn\" class=\"docClass\">Kevlar.abstractFn</a>\n</code></pre>\n</div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-each' class='name expandable'>each</a>( <span class='pre'>Array/NodeList/Mixed array, Function fn, Object scope</span> ) : Mixed</div><div class='description'><div class='short'>Iterates an array calling the supplied function. ...</div><div class='long'><p>Iterates an array calling the supplied function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : Array/NodeList/Mixed<div class='sub-desc'><p>The array to be iterated. If this\nargument is not really an array, the supplied function is called once.</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The function to be called with each item. If the\nsupplied function returns false, iteration stops and this method returns\nthe current <code>index</code>. This function is called with\nthe following arguments:</p>\n\n<div class=\"mdetail-params\"><ul>\n<li><code>item</code> : <i>Mixed</i>\n<div class=\"sub-desc\">The item at the current <code>index</code>\nin the passed <code>array</code></div></li>\n<li><code>index</code> : <i>Number</i>\n<div class=\"sub-desc\">The current index within the array</div></li>\n<li><code>allItems</code> : <i>Array</i>\n<div class=\"sub-desc\">The <code>array</code> passed as the first\nargument to <code><a href=\"#!/api/Kevlar-method-each\" rel=\"Kevlar-method-each\" class=\"docClass\">Kevlar.each</a></code>.</div></li>\n</ul></div>\n\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the specified function is executed.\nDefaults to the <code>item</code> at the current <code>index</code>\nwithin the passed <code>array</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>See description for the fn parameter.</p>\n</div></li></ul></div></div></div><div id='method-emptyFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-emptyFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-emptyFn' class='name expandable'>emptyFn</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>An empty function. ...</div><div class='long'><p>An empty function. This can be referred to in cases where you want a function\nbut do not want to create a new function object. Used for performance and clarity\nreasons.</p>\n</div></div></div><div id='method-isArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isArray' class='name expandable'>isArray</a>( <span class='pre'>Mixed a</span> ) : Boolean</div><div class='description'><div class='short'>An accurate way of checking whether a given value is an Array. ...</div><div class='long'><p>An accurate way of checking whether a given value is an Array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isBoolean' class='name expandable'>isBoolean</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is a Boolean. ...</div><div class='long'><p>Whether a given value is a Boolean.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isDate' class='name expandable'>isDate</a>( <span class='pre'>Object object</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the passed object is a JavaScript date object, otherwise false. ...</div><div class='long'><p>Returns true if the passed object is a JavaScript date object, otherwise false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The object to test</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isDefined' class='name expandable'>isDefined</a>( <span class='pre'>Mixed value</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the passed value is not undefined. ...</div><div class='long'><p>Returns true if the passed value is not undefined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to test</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isElement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isElement' class='name expandable'>isElement</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is an DOM element. ...</div><div class='long'><p>Whether a given value is an DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'>Mixed value, [Boolean allowBlank]</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the passed value is empty. ...</div><div class='long'><p>Returns true if the passed value is empty.</p>\n\n\n<p>The value is deemed to be empty if it is<div class=\"mdetail-params\"><ul>\n<li>null</li>\n<li>undefined</li>\n<li>an empty array</li>\n<li>a zero length string (Unless the `allowBlank` parameter is `true`)</li>\n</ul></div>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to test</p>\n</div></li><li><span class='pre'>allowBlank</span> : Boolean (optional)<div class='sub-desc'><p>True to allow empty strings.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isFunction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isFunction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isFunction' class='name expandable'>isFunction</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is a Function. ...</div><div class='long'><p>Whether a given value is a Function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isJQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isJQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isJQuery' class='name expandable'>isJQuery</a>( <span class='pre'>Mixed value</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the given value is a jQuery wrapped set object. ...</div><div class='long'><p>Returns true if the given <code>value</code> is a jQuery wrapped set object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isNumber' class='name expandable'>isNumber</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is a Number. ...</div><div class='long'><p>Whether a given value is a Number.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isObject' class='name expandable'>isObject</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is an Object. ...</div><div class='long'><p>Whether a given value is an Object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isPrimitive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isPrimitive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isPrimitive' class='name expandable'>isPrimitive</a>( <span class='pre'>Mixed value</span> ) : Boolean</div><div class='description'><div class='short'>Returns true if the passed value is a JavaScript 'primitive' (i.e. ...</div><div class='long'><p>Returns true if the passed value is a JavaScript 'primitive' (i.e. a string, number, or boolean).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to test.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isRegExp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isRegExp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isRegExp' class='name expandable'>isRegExp</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is a Regular Expression. ...</div><div class='long'><p>Whether a given value is a Regular Expression.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isString' class='name expandable'>isString</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is a String. ...</div><div class='long'><p>Whether a given value is a String.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isUndefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-isUndefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-isUndefined' class='name expandable'>isUndefined</a>( <span class='pre'>Mixed v</span> ) : Boolean</div><div class='description'><div class='short'>Whether a given value is undefined. ...</div><div class='long'><p>Whether a given value is undefined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Mixed<div class='sub-desc'><p>The value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-namespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-namespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-namespace' class='name expandable'>namespace</a>( <span class='pre'>String namespace1, String namespace2, String etc</span> ) : Object</div><div class='description'><div class='short'>Creates namespaces to be used for scoping variables and classes so that they are not global. ...</div><div class='long'><p>Creates namespaces to be used for scoping variables and classes so that they are not global.\nSpecifying the last node of a namespace implicitly creates all other nodes. Usage:</p>\n\n<pre><code><a href=\"#!/api/Kevlar-method-namespace\" rel=\"Kevlar-method-namespace\" class=\"docClass\">Kevlar.namespace</a>( 'Company', 'Company.data' );\n<a href=\"#!/api/Kevlar-method-namespace\" rel=\"Kevlar-method-namespace\" class=\"docClass\">Kevlar.namespace</a>( 'Company.data' ); // equivalent and preferable to above syntax\nCompany.Widget = function() { ... }\nCompany.data.CustomStore = function(config) { ... }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace1</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>namespace2</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>etc</span> : String<div class='sub-desc'><p>...</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The namespace object. (If multiple arguments are passed, this will be the last namespace created)</p>\n</div></li></ul></div></div></div><div id='method-newId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-newId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-newId' class='name expandable'>newId</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Generates a new id. ...</div><div class='long'><p>Generates a new id. The id is a sequentially increasing number, starting with\nthe first returned number being 1.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The new id.</p>\n</div></li></ul></div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Kevlar'>Kevlar</span><br/><a href='source/Kevlar.html#Kevlar-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Kevlar-method-toArray' class='name expandable'>toArray</a>( <span class='pre'>Array/Arguments/NodeList a</span> ) : Array</div><div class='description'><div class='short'>Converts any iterable (numeric indices and a length property) into a true array\nDon't use this on strings. ...</div><div class='long'><p>Converts any iterable (numeric indices and a length property) into a true array\nDon't use this on strings. IE doesn't support \"abc\"[0] which this implementation depends on.\nFor strings, use this instead: \"abc\".match(/./g) => [a,b,c];</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Array/Arguments/NodeList<div class='sub-desc'><p>The iterable object to be turned into a true Array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>The array.</p>\n</div></li></ul></div></div></div></div></div></div></div>","uses":[],"code_type":"assignment","inheritdoc":null,"superclasses":[],"mixins":[],"members":{"property":[{"owner":"Kevlar","meta":{},"name":"apply","id":"property-apply","tagname":"property"},{"owner":"Kevlar","meta":{},"name":"applyIf","id":"property-applyIf","tagname":"property"},{"owner":"Kevlar","meta":{},"name":"extend","id":"property-extend","tagname":"property"}],"cfg":[],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"Kevlar","meta":{},"name":"abstractFn","id":"method-abstractFn","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"each","id":"method-each","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"emptyFn","id":"method-emptyFn","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isArray","id":"method-isArray","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isBoolean","id":"method-isBoolean","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isDate","id":"method-isDate","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isDefined","id":"method-isDefined","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isElement","id":"method-isElement","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isEmpty","id":"method-isEmpty","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isFunction","id":"method-isFunction","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isJQuery","id":"method-isJQuery","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isNumber","id":"method-isNumber","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isObject","id":"method-isObject","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isPrimitive","id":"method-isPrimitive","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isRegExp","id":"method-isRegExp","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isString","id":"method-isString","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"isUndefined","id":"method-isUndefined","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"namespace","id":"method-namespace","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"newId","id":"method-newId","tagname":"method"},{"owner":"Kevlar","meta":{},"name":"toArray","id":"method-toArray","tagname":"method"}]},"component":false,"meta":{},"private":false,"mixedInto":[],"name":"Kevlar","alternateClassNames":[],"aliases":{},"html_meta":{},"tagname":"class","extends":null,"requires":[],"id":"class-Kevlar","allMixins":[],"subclasses":[],"inheritable":false});